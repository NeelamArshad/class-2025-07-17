---
title: "Resume Experiment"
format: html
execute: 
  echo: false
---

Q: Imagine that you work for a civil rights organization in Chicago. You want to understand the process by which black US citizens are discriminated against in hiring today.

The population table can have unit/time, columns with different races, which would be covariates. Age and geneder can be covariates. A ID_column and location will be Chicago.A column for time/year.The units will be individual names. Outcome column would be receiving the job or not. 

```{r}
#| message: false

library(tidyverse)
library(tidymodels)
library(broom)
library(marginaleffects)
library(easystats)

x <- read_csv("https://raw.githubusercontent.com/PPBDS/bootcamp/refs/heads/master/_internal/data/resume.csv",
        show_col_types = FALSE) |> 
            mutate(call = as.factor(call))
```

## Background Information

Bertrand, Marianne and Sendhil Mullainathan. 2004. "Are Emily and Greg More Employable Than Lakisha and Jamal? A Field Experiment on Labor Market Discrimination." American Economic Review, 94 (4): 991â€“1013. Data cleaned and discussed in "Quantitative Social Science: An Introduction" by Kosuke Imai.

"We study race in the labor market by sending fictitious resumes to help-wanted ads in Boston and Chicago newspapers. To manipulate perceived race, resumes are randomly assigned African-American- or White-sounding names. White names receive 50 percent more callbacks for interviews. Callbacks are also more responsive to resume quality for White names than for African-American ones. The racial gap is uniform across occupation, industry, and employer size. We also find little evidence that employers are inferring social class from the names. Differential treatment by race still appears to still be prominent in the U.S. labor market."


## Two Scenarios

* Imagine that you are a contemporary historian studying US employment in the year 2000 in Baltimore. You want to understand the process by which some people got jobs and some did not.

* Imagine that you work for a civil rights organization in Chicago. You want to understand the process by which black US citizens are discriminated against in hiring today.

## Data Generating Mechanism

```{r}
fit_call <- logistic_reg() |> 
    fit(call ~ gender + city + ethnicity + special + quality, data = x) 
```

```{r}
fit_call
```

```{r}
fit_call |> 
    tidy(conf.int = TRUE)
```

This is my data generating mechanism. 

$$
\begin{equation}
\begin{aligned}
\text{logit}(\Pr(\text{call} = 1)) = 
& -2.66 
- 0.13 \cdot \text{gendermale} 
- 0.47 \cdot \text{citychicago} \\
& + 0.45 \cdot \text{ethnicitycauc} 
+ 0.81 \cdot \text{specialyes} 
- 0.16 \cdot \text{qualitylow}
\end{aligned}
\end{equation}
$$

## Temperance

What are the questions you want to answer?

How can you use the **marginaleffects** package to answer them?

```{r}
predictions(fit_call, type = "prob")

```
 We used a dataset from a resume study which was run rin in Chicago and Boston around the year 2000, I seek to understand the casual effect of African-American- versus White-sounding names on receiving interviews. 
 I estimate the logistic model in which dependent variable indicates whether or not a specific resume received a callback from the employer to which resume was submitted. One concern is the potential violation of the unconfoundedness assumption - if there are unobserved factors correlated with both name type and callback probability, this could bias the estimated effect.

 
 ```{r}
 plot_predictions(fit_call, type = "prob", by = c("ethnicity", "city", "quality"), draw = FALSE)
 ```

```{r}
library(ggplot2)
library(dplyr)

# Get the predictions (if not already stored)
preds <- plot_predictions(fit_call, type = "prob", by = c("ethnicity", "city", "quality"), draw = FALSE)

# Filter only for the 'yes' group (probability of receiving a callback)
pred_yes <- preds %>%
  filter(group == "yes")

# Plot the data
ggplot(pred_yes, aes(x = quality, y = estimate, fill = ethnicity)) +
  geom_col(position = position_dodge(width = 0.8), width = 0.7) +
  geom_errorbar(
    aes(ymin = conf.low, ymax = conf.high),
    position = position_dodge(width = 0.8),
    width = 0.2
  ) +
  facet_wrap(~ city) +
  labs(
    title = "Predicted Probability of Receiving a Callback (Call = Yes)",
    x = "Resume Quality",
    y = "Predicted Probability",
    fill = "Ethnicity"
  ) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  theme_minimal(base_size = 14)
```